@using TimePilot.Web.ViewModels
@model StoryViewModel

@{
    ViewBag.Title = "Story";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="flex-container-header">
    <h1>Time Pilot</h1>
    <p>
        <a class="pre-activebread" href="Index">Project Selection</a> >
        <a class="activebread">Story Points</a> >
        <a class="deactivebread">Resource Capacity</a> >
        <a class="deactivebread">Conversion Rate & Results</a>
    </p>
</div>

<div class="pre-project-container">
    <h2 class="project-header">STORIES</h2>
    <div class="project-controls">
        <p class="controls-label">Sort Story By:</p>
        <select class="sort-method">
            <option onchange="">Name A-Z</option>
            <option>Name Z-A</option>
            <option>Newest Updated</option>
            <option>Oldest Updated</option>
        </select>
    </div>
</div>
@using (Html.BeginForm("Story", "Home", FormMethod.Post, new { @id = "storyForm" }))
{
    <div class="stories-container">
        @if (Model.StoryList.Count < 1)
        {
            <h3> There are no stories for this project </h3>
        }
        else
        {
            <h2>Story Points: @Model.totalNumberStoryPoints</h2>
            <table class="table-hover">
                <tr>
                    <th>Story ID</th>
                    <th>Story Summary</th>
                    <th>Story Points</th>
                    <th>Delete Story</th>
                </tr>
                @for (int i = 0; i < Model.StoryList.Count(); i++)
                {
                    <tr>
                        <td>
                            @Html.Label("Key", @Model.StoryList[i].StoryKey)
                            @Html.HiddenFor(m => m.StoryList[i].StoryKey)
                        </td>
                        <td>
                            @Html.Label("Summary", @Model.StoryList[i].Summary)
                            @Html.HiddenFor(m => m.StoryList[i].Summary)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.StoryList[i].StoryPoints, new { @class = "storyPoint", @type="number" })
                            @Html.HiddenFor(m => m.StoryList[i].StoryPoints)
                        </td>
                        <td>
                            <input class="" name="chkDelete" type="checkbox" value="@Model.StoryList[i].StoryID"/>
                            @Html.HiddenFor(m => m.StoryList[i].StoryID)
                        </td>
                    </tr>
                }
            </table>
        }
    </div>
    <div class="buttons-container">
        <input type="button" value="Previous" onclick="location.href='@Url.Action("Index", "Home")'" class="button" />
        <input name="command" id="command" type="submit" value="Resource Capacity Page" onclick="this.form.submit(); location.href='@Url.Action("Resource", "Home")';" class="button" />
        <input id="btnDelete" type="submit" value="Delete Selected" onclick="javascript:;" class="button" />
        <input id="btnUpdate" name="command"  type="submit"  value="Apply Changes" onclick="" class="button" />
        <input id="btnPopulate" type="button" value="Refresh Stories" onclick="location.href='@Url.Action("StoryPopulate", "Home")'" class="button" />
    </div>
} 

<script>
    // JQuery to call delete action from button click
    $("#btnDelete").on("click", function (e) {
        var confirmation = confirm("Are you sure?")
        if (confirmation) {
            e.preventDefault();
            var data = [];
            $("input[name='chkDelete']:checked").each(function () {
                data.push($(this).val());
            });
            if (data.length == 0) {
                return;
            }
            else {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("StoryDelete")",
                    data: { id: data },
                    traditional: true,
                    success: function (result) {
                        location.reload();
                    }
                })
            }
        }
    })

    // JQuery to call populate action from button click
    $("#btnPopulate").on("click", function (e) {
        e.preventDefault();
        $.ajax({
            type: "GET",
            url: "@Url.Action("StoryPopulate")",
            traditional:true,
            success: function (result) {
                location.reload();
            }
        })
    })

    $("#btnUpdate").on("click", function (e) {
        e.preventDefault();
        var data = $('#storyForm').serialize();
        $.ajax({
            type: "POST",
            url: "@Url.Action("StoryUpdate")",
            data: data,
            traditional:true,
            success: function (result) {
                location.reload();
            }
        })
    })
</script>

