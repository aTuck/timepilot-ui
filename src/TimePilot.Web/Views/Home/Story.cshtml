@using TimePilot.Web.ViewModels
@model StoryViewModel

@{
    ViewBag.Title = "Story";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<body>

    <style>
       .modal
       {
    width: 500px;
    height: 160px;
    background-color: white;
    position: absolute;
    border: 2px solid black;
    margin: auto;
    border-radius: 10px
       }
       .modalstuff{
           padding: 30px;
           margin:auto;
           text-align: center;
           
       }
       .modal h2{
           font-size: 24px;
           
           display:block;
       }

       .btn{
           text-align: center;
           margin: 10px;
       }
   
    </style>
<div class="container">
    <div class="flex-container-header">
        <h1>Time Pilot</h1>
        <p>
            <a class="pre-activebread" href="Index">Project Selection</a> >
            <a class="activebread">Story Points</a> >
            <a class="deactivebread">Resource Capacity</a> >
            <a class="deactivebread">Conversion Rate & Results</a>
        </p>
    </div>

    <div class="pre-project-container">
        <h2 class="project-header">STORIES</h2>
        <div class="project-controls">
            <p class="sort-project-info">Sort Story By:</p>
            <select class="sort-method">
                <option onchange="">Name A-Z</option>
                <option>Name Z-A</option>
                <option>Newest Updated</option>
                <option>Oldest Updated</option>
            </select>
        </div>
    </div>
    @using (Html.BeginForm("Story", "Home", FormMethod.Post))
    {
    <div class="stories-container">
        @if (Model.StoryList.Count < 1)
        {
            <h3> There are no stories for this project </h3>
        }
        else
        {
          
                <h1>@Model.totalNumberStoryPoints</h1>
                <table class="table-hover">
                    <tr>
                        <th>Story ID</th>
                        <th>Story Summary</th>
                        <th>Story Points</th>
                        <th>Delete Story</th>
                    </tr>
                    @for (int i = 0; i < Model.StoryList.Count(); i++)
                    {
                        <tr>
                            <td>
                                @Html.Label("Key", @Model.StoryList[i].StoryKey)
                                @Html.HiddenFor(m => m.StoryList[i].StoryKey)
                            </td>
                            <td>
                                @Html.Label("Summary", @Model.StoryList[i].Summary)
                                @Html.HiddenFor(m => m.StoryList[i].Summary)
                            </td>
                            <td>
                                @Html.TextBoxFor(m => m.StoryList[i].StoryPoints, new { @class = "storyPoint", @onchange = "" })
                                @Html.HiddenFor(m => m.StoryList[i].StoryPoints)
                            </td>
                        </tr>
                    }
                </table>
                <input type="submit" value="Delete Selected" onclick="this.form.submit();" class="button" />
                <input type="submit" value="Apply Changes" onclick="this.form.submit();" class="button" />

            }
    </div>
    <input type="submit" value="Previous" onclick="location.href='@Url.Action("Index", "Home")'" class="button" />
    <input name = "command" type="submit" value="Resource Capacity Page" onclick="this.form.submit(); location.href='@Url.Action("Resource", "Home")';" class="button" />
        }
</div>

<<<<<<< HEAD
<input type="submit" value="Previous" onclick="location.href='@Url.Action("Index", "Home")'" class="button" id="BackButton"/>
<input type="submit" value="Resource Capacity" onclick="return StoryPointValidation();" class="button toggleModal" id="ResourceCapacityButton" />
<p>1 point: @Model.StorypointSum[0]</p>
<p>3 point: @Model.StorypointSum[1]</p>
<p>5 point: @Model.StorypointSum[2]</p>
<p>8 point: @Model.StorypointSum[3]</p>
<p>13 point: @Model.StorypointSum[4]</p>
<p>21 point:  @Model.StorypointSum[5]</p>

 <div class="modal" id="MyModal">
     <div class="modalstuff">
         <header>
             <h2>
                 One or more stories on this page has zero story points
             </h2>
         </header>
         <button class="btn closebutton" id="closebutton"> Edit Stories </button>
         <button class="btn proceedbutton" id="continuebutton"> Continue </button>
     </div>
</div>

    <script>
        function StoryPointValidation() {
            var zeros = @Html.Raw(Json.Encode(Model.ZeroStoryFlag));
            if(zeros == true)
            {
                //return alert("You have stories with 0 Story points");
                var modal = document.getElementById('MyModal');
                var closebutton = document.getElementById('closebutton')
                var continuebutton = document.getElementById('continuebutton')
                modal.style.display = "block";
                closebutton.onclick = function() {
                    modal.style.display = "none";
                }
                continuebutton.onclick = function()
                {
                    location.href = "@Url.Action("Resource", "Home")";
                }
            }
            else
            {
                location.href = "@Url.Action("Resource", "Home")";
            }
    }

    </script>
</body>
=======
>>>>>>> new-develop
