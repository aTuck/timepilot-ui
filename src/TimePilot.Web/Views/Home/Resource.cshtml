@model TimePilot.Web.ViewModels.ResourceCapacityViewModel
@using TimePilot.Web.Models;
@using System.Linq;

@{
    ViewBag.Title = "Resource Capacity";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    table {
       
        border-collapse: collapse; 
        width: 100%
    }

    th {
        background: #5cd2db;
        border: 1px solid #000;    
        text-align: center;
        padding: 6px;
    }

    tr:nth-child(even) td input{
          background: #28d1ef;
          border-radius: 20px;
    }

        tr:nth-child(even) td input:hover {
            background: #24bbd6;
            cursor: pointer;
            animation: ease-in;
            transition: 0.7s;
        }

</style>

<div class="flex-container-header">
    <h1>Time Pilot</h1>
    <p><a class="pre-activebread" href="Index">Project Selection</a> >
       <a class="pre-activebread" href="Story">Story Points</a> >
       <a class="activebread">Resource Capacity</a> >
       <a class="deactivebread">Conversion Rate & Results</a>
    </p>
</div>

<div class="resource-container">
        @using (Html.BeginForm("Resource", "Home", FormMethod.Post, new { @id = "resourceForm" }))
        {
            <table id="myTable">
                <tr>
                    <th>Role</th>
                    <th>Name</th>
                    <th>Sprint Days</th>
                    <th>% Work</th>
                    <th>Total Hours</th>
                    <th>Standup Duration</th>
                    <th>Standups</th>
                    <th>Misc</th>
                    <th>Time Off</th>
                    <th>Non Dev Hours</th>
                    <th>Total Available</th>
                    <th>Delete</th>
                </tr>
                @for (int i = 0; i < Model.sprints.Count(); i++)
                {
                <tr>
                    <th class="sprints">Sprint @(i + 1)</th>

                    <td class="sprint-button">
                        <input type="submit" name="command" value="Add Member" id=@(i) onclick="setButtonIndex(this.id)" class="button" />
                        @Html.HiddenFor(m => m.buttonIndex, new { id = "buttonIndex" })
                    </td>

                    <td class="sprint-button">
                        <input type="submit" name="command" id=@(i) value="Delete Sprint" class="button" onclick="setButtonIndex(this.id)" />
                        @Html.HiddenFor(m => m.buttonIndex, new { id = "buttonIndex" })
                    </td>
                    <td class="sprint-button">
                        <input type="submit" name="command" id=@(i) value="Copy Sprint" class="button" onclick="setButtonIndex(this.id)" />
                        @Html.HiddenFor(m => m.buttonIndex, new { id = "buttonIndex" })
                    </td>

                </tr>

                    for (int j = 0; j < Model.sprints[i].members.Count(); j++)
                    {
                    <tr>
                        <td>
                            @Html.DropDownListFor(m => m.sprints[i].members[j].role, new SelectList(Model.roleList, "Value", "Text", Model.sprints[i].members[j].role), "Select Role", new { id = @i.ToString() + @j.ToString(), @onchange = "setMemberIndex(this.id); this.form.submit()" })
                            @Html.HiddenFor(m => m.memberIndex, new { id = "memberIndex" })

                        </td>
                        <td >
                            @Html.TextBoxFor(m => m.sprints[i].members[j].name, new { @class = "name" })
                            @Html.HiddenFor(m => m.sprints[i].members[j].name)

                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.sprints[i].members[j].sprintDays)
                            @Html.HiddenFor(m => m.sprints[i].members[j].sprintDays)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.sprints[i].members[j].percentWork)
                            @Html.HiddenFor(m => m.sprints[i].members[j].percentWork)
                        </td>

                        <td>
                            @Html.TextBoxFor(m => m.sprints[i].members[j].totalHours, new { @readonly = true })
                            @Html.HiddenFor(m => m.sprints[i].members[j].totalHours)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.sprints[i].members[j].standupDuration)
                            @Html.HiddenFor(m => m.sprints[i].members[j].standupDuration)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.sprints[i].members[j].standUps, new { @readonly = true })
                            @Html.HiddenFor(m => m.sprints[i].members[j].standUps)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.sprints[i].members[j].misc)
                            @Html.HiddenFor(m => m.sprints[i].members[j].misc)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.sprints[i].members[j].timeOff)
                            @Html.HiddenFor(m => m.sprints[i].members[j].timeOff)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.sprints[i].members[j].nonDevHours, new { @readonly = true })
                            @Html.HiddenFor(m => m.sprints[i].members[j].nonDevHours)
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.sprints[i].members[j].totalAvailable, new { @readonly = true })
                            @Html.HiddenFor(m => m.sprints[i].members[j].totalAvailable)
                        </td>
                        <td>
                            @Html.CheckBoxFor(m => m.sprints[i].members[j].isSelectedToDelete)
                            @Html.HiddenFor(m => m.sprints[i].members[j].isSelectedToDelete)
                        </td>
                    </tr>
                        }
                    }
            </table>

            /*
            for (int i = 0; i < Model.sprints.Count(); i++)
            {
                <div class="panel-group">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h4 class="panel-title">
                                <a data-toggle="collapse" href="#collapse@(i)">Sprint @(i+1)</a>
                            </h4>
                            <input type="submit" name="command" value="Add Member" id=@(i) onclick="setButtonIndex(this.id)" class="btn btn-default" />
                            @Html.HiddenFor(m => m.buttonIndex, new { id = "buttonIndex" })
                            <input type="submit" name="command" id=@(i) value="Delete Sprint" onclick="setButtonIndex(this.id)"  class="btn btn-default" />
                            @Html.HiddenFor(m => m.buttonIndex, new { id = "buttonIndex" })
                        </div>
                        <div id="collapse@(i)" class="panel-collapse collapse">
                            @for (int j = 0; j < Model.sprints[i].members.Count(); j++)
                            {
                                <div>
                                    @Html.DropDownListFor(m => m.sprints[i].members[j].role, new SelectList(Model.roleList, "Value", "Text", Model.sprints[i].members[j].role), "Add New Member", new { id = @i.ToString() + @j.ToString(), @onchange = "setMemberIndex(this.id); this.form.submit()" })
                                    @Html.HiddenFor(m => m.memberIndex, new { id = "memberIndex" })
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }*/

            <div class="total-capacity">
                <p><b>Total Dev Capacity:</b>  @Model.totalDevCapacity</p>
                <p><b>Average Per Sprint: </b> @Model.avgPerSprint</p>
                <p><b>Average Per Week: </b> @Model.avgPerWeek</p>
            </div>

            <div class="buttons-container">
                <input type="submit" name="command" id="command" value="Add Sprint" class="button" />
                <input type="submit" name="command" value="Delete Selected" class="button" />
                <input type="button" value="Previous" onclick="location.href='@Url.Action("Story", "Home")'" class="button" />
                <input type="submit" name="command" id="command" value="Recalculate Values" class="button" />
                <input type="button" value="Results Page" onclick="postResourceForm()" class="button" />
            </div>
        }
</div>




<script type="text/javascript">
        function setButtonIndex(e) {
            document.getElementById('buttonIndex').value = e;
        }
        function setMemberIndex(e) {
            document.getElementById('memberIndex').value = e;
       } 
        $('.collapse').collapse("collapse");

        function postResourceForm() {
            var data = $('#resourceForm').serialize();
            $.ajax({
                type: "POST",
                url: "@Url.Action("ResourceUpdate")",
                data: data,
                traditional:true,
                success: function (result) {
                location.reload();
                }
            })
            location.href = '@Url.Action("Result", "Home")'
        }
</script>
